export const subscriptionFactoryABI = [
    {
        inputs: [{ internalType: 'address', name: '_initBlueprint', type: 'address' }],
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: true, internalType: 'address', name: 'previousOwner', type: 'address' },
            { indexed: true, internalType: 'address', name: 'newOwner', type: 'address' },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            { indexed: false, internalType: 'address', name: 'id', type: 'address' },
            {
                components: [
                    { internalType: 'contract IERC20Extented', name: 'token', type: 'address' },
                    { internalType: 'uint256', name: 'hardCap', type: 'uint256' },
                    { internalType: 'uint256', name: 'softCap', type: 'uint256' },
                    { internalType: 'uint256', name: 'userHardCap', type: 'uint256' },
                    { internalType: 'uint256', name: 'sellRate', type: 'uint256' },
                    { internalType: 'uint256', name: 'listingRate', type: 'uint256' },
                    { internalType: 'uint256', name: 'startTime', type: 'uint256' },
                    { internalType: 'uint256', name: 'endTime', type: 'uint256' },
                    { internalType: 'uint256', name: 'finalizeTime', type: 'uint256' },
                    { internalType: 'uint256', name: 'publicSaleTime', type: 'uint256' },
                ],
                indexed: false,
                internalType: 'struct GempadSubscriptionPoolFactory.SubscriptionPoolDetails',
                name: '_info',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IUniswapV2Router02',
                        name: 'router',
                        type: 'address',
                    },
                    { internalType: 'uint256', name: 'liquidityPercent', type: 'uint256' },
                    { internalType: 'uint256', name: 'lockTime', type: 'uint256' },
                    { internalType: 'address', name: 'locker', type: 'address' },
                    { internalType: 'uint256', name: 'liquidityAdded', type: 'uint256' },
                ],
                indexed: false,
                internalType: 'struct GempadSubscriptionPoolFactory.LiquidityDetails',
                name: 'liq',
                type: 'tuple',
            },
            { indexed: false, internalType: 'address', name: 'subscriptionPool', type: 'address' },
            { indexed: false, internalType: 'bool', name: 'refundType', type: 'bool' },
        ],
        name: 'SubscriptionPoolCreated',
        type: 'event',
    },
    {
        inputs: [],
        name: 'IdCounter',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                components: [
                    { internalType: 'contract IERC20Extented', name: 'token', type: 'address' },
                    { internalType: 'uint256', name: 'hardCap', type: 'uint256' },
                    { internalType: 'uint256', name: 'softCap', type: 'uint256' },
                    { internalType: 'uint256', name: 'userHardCap', type: 'uint256' },
                    { internalType: 'uint256', name: 'sellRate', type: 'uint256' },
                    { internalType: 'uint256', name: 'listingRate', type: 'uint256' },
                    { internalType: 'uint256', name: 'startTime', type: 'uint256' },
                    { internalType: 'uint256', name: 'endTime', type: 'uint256' },
                    { internalType: 'uint256', name: 'finalizeTime', type: 'uint256' },
                    { internalType: 'uint256', name: 'publicSaleTime', type: 'uint256' },
                ],
                internalType: 'struct GempadSubscriptionPoolFactory.SubscriptionPoolDetails',
                name: '_info',
                type: 'tuple',
            },
            {
                components: [
                    {
                        internalType: 'contract IUniswapV2Router02',
                        name: 'router',
                        type: 'address',
                    },
                    { internalType: 'uint256', name: 'liquidityPercent', type: 'uint256' },
                    { internalType: 'uint256', name: 'lockTime', type: 'uint256' },
                    { internalType: 'address', name: 'locker', type: 'address' },
                    { internalType: 'uint256', name: 'liquidityAdded', type: 'uint256' },
                ],
                internalType: 'struct GempadSubscriptionPoolFactory.LiquidityDetails',
                name: '_liquidity',
                type: 'tuple',
            },
            { internalType: 'address', name: '_fundToken', type: 'address' },
            { internalType: 'bool', name: '_isprivateSale', type: 'bool' },
            { internalType: 'bool', name: '_isRefund', type: 'bool' },
            { internalType: 'address payable', name: '_feeReceiver', type: 'address' },
        ],
        name: 'createSubscriptionPool',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getAllSubscriptionPools',
        outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getImplementation',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'getSubscriptionPoolBeacon',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: '_user', type: 'address' }],
        name: 'getUserSubscriptionPools',
        outputs: [{ internalType: 'address[]', name: '', type: 'address[]' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        name: 'subscriptionPools',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
] as const;
