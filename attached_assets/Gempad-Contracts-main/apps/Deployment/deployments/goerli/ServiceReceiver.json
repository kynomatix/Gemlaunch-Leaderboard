{
  "address": "0xd60ADcf519FC17490e7c47c0E6b306f7F4806916",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "serviceName",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "serviceAddress",
          "type": "address"
        }
      ],
      "name": "Created",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "serviceName",
          "type": "string"
        }
      ],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "serviceName",
          "type": "string"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "serviceName",
          "type": "string"
        }
      ],
      "name": "pay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        }
      ],
      "name": "recoverERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "serviceName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "serviceName",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x494192852ce3b169e566e3583768362ab4a4b6ace1052166869ba1fb1699d57d",
  "receipt": {
    "to": null,
    "from": "0x6D36409486efA4Cc32c0472Efa7871ED03b8BEd0",
    "contractAddress": "0xd60ADcf519FC17490e7c47c0E6b306f7F4806916",
    "transactionIndex": 4,
    "gasUsed": "631884",
    "logsBloom": "0x
    "blockHash": "0xc90d95574f02d1790306b934e578ef924926a70fea4e19cf4378edbde62dbffb",
    "transactionHash": "0x494192852ce3b169e566e3583768362ab4a4b6ace1052166869ba1fb1699d57d",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 10654617,
        "transactionHash": "0x494192852ce3b169e566e3583768362ab4a4b6ace1052166869ba1fb1699d57d",
        "address": "0xd60ADcf519FC17490e7c47c0E6b306f7F4806916",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000006d36409486efa4cc32c0472efa7871ed03b8bed0"
        ],
        "data": "0x",
        "logIndex": 6,
        "blockHash": "0xc90d95574f02d1790306b934e578ef924926a70fea4e19cf4378edbde62dbffb"
      }
    ],
    "blockNumber": 10654617,
    "cumulativeGasUsed": "1036116",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "df8c0be0bf555eb471a6f41b02cf2ae4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"serviceAddress\",\"type\":\"address\"}],\"name\":\"Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"}],\"name\":\"getFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"}],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"recoverERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"serviceName\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Implementation of the ServiceReceiver\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"recoverERC20(address,uint256)\":{\"details\":\"Remember that only owner can call so be careful when use on contracts generated from other contracts.\",\"params\":{\"tokenAddress\":\"The token contract address\",\"tokenAmount\":\"Number of tokens to be sent\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFee(string,uint256)\":{\"params\":{\"_fee\":\": token fee percentage\",\"serviceName\":\": its a name of service i,e., launchpad, airdrop, fairLaunch etc.  [[ALERT]]: make sure that the service name should match the exact smart contract name.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ServiceReceiver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setFee(string,uint256)\":{\"notice\":\"set fee in bips (3 decimals i,e : 100 = 100000). Apart from sale creat fee.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@gempad/services/contracts/ServiceReceiver.sol\":\"ServiceReceiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@gempad/services/contracts/ServiceReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.14;\\r\\n\\r\\nimport 'eth-token-recover/contracts/TokenRecover.sol';\\r\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\r\\n\\r\\n/**\\r\\n * @title ServiceReceiver\\r\\n * @dev Implementation of the ServiceReceiver\\r\\n */\\r\\ncontract ServiceReceiver is TokenRecover {\\r\\n    mapping(bytes32 => uint256) private _prices;\\r\\n    mapping(bytes32 => uint256) private _tokenFee;\\r\\n\\r\\n    event Created(string serviceName, address indexed serviceAddress);\\r\\n\\r\\n    function pay(string memory serviceName) public payable {\\r\\n        require(msg.value == _prices[_toBytes32(serviceName)], 'ServiceReceiver: Insufficient fee');\\r\\n        emit Created(serviceName, _msgSender());\\r\\n    }\\r\\n\\r\\n    function getPrice(string memory serviceName) public view returns (uint256) {\\r\\n        return _prices[_toBytes32(serviceName)];\\r\\n    }\\r\\n\\r\\n    function getFee(string memory serviceName) public view returns (uint256) {\\r\\n        return _tokenFee[_toBytes32(serviceName)];\\r\\n    }\\r\\n\\r\\n    function setPrice(string memory serviceName, uint256 amount) public onlyOwner {\\r\\n        _prices[_toBytes32(serviceName)] = amount;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @notice set fee in bips (3 decimals i,e : 100 = 100000). Apart from sale creat fee.\\r\\n     * @param serviceName: its a name of service i,e., launchpad, airdrop, fairLaunch etc.\\r\\n     *  [[ALERT]]: make sure that the service name should match the exact smart contract name.\\r\\n     * @param _fee: token fee percentage\\r\\n     */\\r\\n    function setFee(string memory serviceName, uint256 _fee) public onlyOwner {\\r\\n        _tokenFee[_toBytes32(serviceName)] = _fee;\\r\\n    }\\r\\n\\r\\n    function withdraw(uint256 amount) public onlyOwner {\\r\\n        payable(owner()).transfer(amount);\\r\\n    }\\r\\n\\r\\n    function withdrawToken(address _token, uint256 _amount) public onlyOwner {\\r\\n        require(_token != address(0), 'Err: Zero Address');\\r\\n        require(_amount != 0, 'Err: Zero Amount');\\r\\n        require(IERC20(_token).balanceOf(address(this)) >= _amount, 'Err: Insufficient balance');\\r\\n\\r\\n        IERC20(_token).transfer(owner(), _amount);\\r\\n    }\\r\\n\\r\\n    function _toBytes32(string memory serviceName) private pure returns (bytes32) {\\r\\n        return keccak256(abi.encode(serviceName));\\r\\n    }\\r\\n\\r\\n    receive() external payable {}\\r\\n}\\r\\n\",\"keccak256\":\"0xce1b725df4f6a3c6c313645f849650afaecf27cfdb091f5961b3b3685ac53dae\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"eth-token-recover/contracts/TokenRecover.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title TokenRecover\\n * @dev Allows owner to recover any ERC20 sent into the contract\\n */\\ncontract TokenRecover is Ownable {\\n    /**\\n     * @dev Remember that only owner can call so be careful when use on contracts generated from other contracts.\\n     * @param tokenAddress The token contract address\\n     * @param tokenAmount Number of tokens to be sent\\n     */\\n    function recoverERC20(address tokenAddress, uint256 tokenAmount) public virtual onlyOwner {\\n        IERC20(tokenAddress).transfer(owner(), tokenAmount);\\n    }\\n}\\n\",\"keccak256\":\"0x2e3e2d1d67101bc464810ffc9ffcd4991943911ab800eecfb2890f2219dcc8f1\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610a0e8061007e6000396000f3fe6080604052600436106100c05760003560e01c80638980f11f11610074578063cafe0e901161004e578063cafe0e90146101d1578063ed1eee68146101f1578063f2fde38b1461021157600080fd5b80638980f11f146101695780638da5cb5b146101895780639e281a98146101b157600080fd5b80632e1a7d4d116100a55780632e1a7d4d14610101578063524f388914610121578063715018a61461015457600080fd5b806322e01192146100cc5780632b66d72e146100ee57600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506100ec6100e736600461084c565b610231565b005b6100ec6100fc366004610891565b61025c565b34801561010d57600080fd5b506100ec61011c3660046108ce565b610335565b34801561012d57600080fd5b5061014161013c366004610891565b61037a565b6040519081526020015b60405180910390f35b34801561016057600080fd5b506100ec61039f565b34801561017557600080fd5b506100ec610184366004610903565b6103b3565b34801561019557600080fd5b506000546040516001600160a01b03909116815260200161014b565b3480156101bd57600080fd5b506100ec6101cc366004610903565b61046a565b3480156101dd57600080fd5b506100ec6101ec36600461084c565b6105e9565b3480156101fd57600080fd5b5061014161020c366004610891565b6105ff565b34801561021d57600080fd5b506100ec61022c36600461092d565b61060e565b61023961069e565b8060016000610247856106f8565b81526020810191909152604001600020555050565b60016000610269836106f8565b81526020019081526020016000205434146102f15760405162461bcd60e51b815260206004820152602160248201527f5365727669636552656365697665723a20496e73756666696369656e7420666560448201527f650000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03167fdb4e8a6f69daa6b4b9977ed734b510ed9b7ce86536c87435bfd7ef57968d05ee8260405161032a919061094f565b60405180910390a250565b61033d61069e565b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610376573d6000803e3d6000fd5b5050565b600060016000610389846106f8565b8152602001908152602001600020549050919050565b6103a761069e565b6103b16000610728565b565b6103bb61069e565b816001600160a01b031663a9059cbb6103dc6000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610441573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610465919061099d565b505050565b61047261069e565b6001600160a01b0382166104c85760405162461bcd60e51b815260206004820152601160248201527f4572723a205a65726f204164647265737300000000000000000000000000000060448201526064016102e8565b806000036105185760405162461bcd60e51b815260206004820152601060248201527f4572723a205a65726f20416d6f756e740000000000000000000000000000000060448201526064016102e8565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b91906109bf565b10156103bb5760405162461bcd60e51b815260206004820152601960248201527f4572723a20496e73756666696369656e742062616c616e63650000000000000060448201526064016102e8565b6105f161069e565b8060026000610247856106f8565b600060026000610389846106f8565b61061661069e565b6001600160a01b0381166106925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102e8565b61069b81610728565b50565b6000546001600160a01b031633146103b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102e8565b60008160405160200161070b919061094f565b604051602081830303815290604052805190602001209050919050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126107d057600080fd5b813567ffffffffffffffff808211156107eb576107eb610790565b604051601f8301601f19908116603f0116810190828211818310171561081357610813610790565b8160405283815286602085880101111561082c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561085f57600080fd5b823567ffffffffffffffff81111561087657600080fd5b610882858286016107bf565b95602094909401359450505050565b6000602082840312156108a357600080fd5b813567ffffffffffffffff8111156108ba57600080fd5b6108c6848285016107bf565b949350505050565b6000602082840312156108e057600080fd5b5035919050565b80356001600160a01b03811681146108fe57600080fd5b919050565b6000806040838503121561091657600080fd5b61091f836108e7565b946020939093013593505050565b60006020828403121561093f57600080fd5b610948826108e7565b9392505050565b600060208083528351808285015260005b8181101561097c57858101830151858201604001528201610960565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156109af57600080fd5b8151801515811461094857600080fd5b6000602082840312156109d157600080fd5b505191905056fea264697066735822122024ae5ae5b88094b68d03fa9b14b18796b9c03764dfd07177fa6b89b4efac8b6f64736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100c05760003560e01c80638980f11f11610074578063cafe0e901161004e578063cafe0e90146101d1578063ed1eee68146101f1578063f2fde38b1461021157600080fd5b80638980f11f146101695780638da5cb5b146101895780639e281a98146101b157600080fd5b80632e1a7d4d116100a55780632e1a7d4d14610101578063524f388914610121578063715018a61461015457600080fd5b806322e01192146100cc5780632b66d72e146100ee57600080fd5b366100c757005b600080fd5b3480156100d857600080fd5b506100ec6100e736600461084c565b610231565b005b6100ec6100fc366004610891565b61025c565b34801561010d57600080fd5b506100ec61011c3660046108ce565b610335565b34801561012d57600080fd5b5061014161013c366004610891565b61037a565b6040519081526020015b60405180910390f35b34801561016057600080fd5b506100ec61039f565b34801561017557600080fd5b506100ec610184366004610903565b6103b3565b34801561019557600080fd5b506000546040516001600160a01b03909116815260200161014b565b3480156101bd57600080fd5b506100ec6101cc366004610903565b61046a565b3480156101dd57600080fd5b506100ec6101ec36600461084c565b6105e9565b3480156101fd57600080fd5b5061014161020c366004610891565b6105ff565b34801561021d57600080fd5b506100ec61022c36600461092d565b61060e565b61023961069e565b8060016000610247856106f8565b81526020810191909152604001600020555050565b60016000610269836106f8565b81526020019081526020016000205434146102f15760405162461bcd60e51b815260206004820152602160248201527f5365727669636552656365697665723a20496e73756666696369656e7420666560448201527f650000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03167fdb4e8a6f69daa6b4b9977ed734b510ed9b7ce86536c87435bfd7ef57968d05ee8260405161032a919061094f565b60405180910390a250565b61033d61069e565b600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610376573d6000803e3d6000fd5b5050565b600060016000610389846106f8565b8152602001908152602001600020549050919050565b6103a761069e565b6103b16000610728565b565b6103bb61069e565b816001600160a01b031663a9059cbb6103dc6000546001600160a01b031690565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610441573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610465919061099d565b505050565b61047261069e565b6001600160a01b0382166104c85760405162461bcd60e51b815260206004820152601160248201527f4572723a205a65726f204164647265737300000000000000000000000000000060448201526064016102e8565b806000036105185760405162461bcd60e51b815260206004820152601060248201527f4572723a205a65726f20416d6f756e740000000000000000000000000000000060448201526064016102e8565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281906001600160a01b038416906370a0823190602401602060405180830381865afa158015610577573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059b91906109bf565b10156103bb5760405162461bcd60e51b815260206004820152601960248201527f4572723a20496e73756666696369656e742062616c616e63650000000000000060448201526064016102e8565b6105f161069e565b8060026000610247856106f8565b600060026000610389846106f8565b61061661069e565b6001600160a01b0381166106925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102e8565b61069b81610728565b50565b6000546001600160a01b031633146103b15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102e8565b60008160405160200161070b919061094f565b604051602081830303815290604052805190602001209050919050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126107d057600080fd5b813567ffffffffffffffff808211156107eb576107eb610790565b604051601f8301601f19908116603f0116810190828211818310171561081357610813610790565b8160405283815286602085880101111561082c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806040838503121561085f57600080fd5b823567ffffffffffffffff81111561087657600080fd5b610882858286016107bf565b95602094909401359450505050565b6000602082840312156108a357600080fd5b813567ffffffffffffffff8111156108ba57600080fd5b6108c6848285016107bf565b949350505050565b6000602082840312156108e057600080fd5b5035919050565b80356001600160a01b03811681146108fe57600080fd5b919050565b6000806040838503121561091657600080fd5b61091f836108e7565b946020939093013593505050565b60006020828403121561093f57600080fd5b610948826108e7565b9392505050565b600060208083528351808285015260005b8181101561097c57858101830151858201604001528201610960565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156109af57600080fd5b8151801515811461094857600080fd5b6000602082840312156109d157600080fd5b505191905056fea264697066735822122024ae5ae5b88094b68d03fa9b14b18796b9c03764dfd07177fa6b89b4efac8b6f64736f6c63430008140033",
  "devdoc": {
    "details": "Implementation of the ServiceReceiver",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "recoverERC20(address,uint256)": {
        "details": "Remember that only owner can call so be careful when use on contracts generated from other contracts.",
        "params": {
          "tokenAddress": "The token contract address",
          "tokenAmount": "Number of tokens to be sent"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setFee(string,uint256)": {
        "params": {
          "_fee": ": token fee percentage",
          "serviceName": ": its a name of service i,e., launchpad, airdrop, fairLaunch etc.  [[ALERT]]: make sure that the service name should match the exact smart contract name."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "ServiceReceiver",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setFee(string,uint256)": {
        "notice": "set fee in bips (3 decimals i,e : 100 = 100000). Apart from sale creat fee."
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 25296,
        "contract": "@gempad/services/contracts/ServiceReceiver.sol:ServiceReceiver",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 20515,
        "contract": "@gempad/services/contracts/ServiceReceiver.sol:ServiceReceiver",
        "label": "_prices",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 20519,
        "contract": "@gempad/services/contracts/ServiceReceiver.sol:ServiceReceiver",
        "label": "_tokenFee",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}